# Z

N, r, c = map(int, input().split())

def solve(N, a, b):
    # N: 현재 남은 분할 단계
    # a, b: 현재 찾고자 하는 좌표 (행, 열)

    # 재귀 종료 조건 (1x1 크기일 때)
    if N == 0:
        return 0

    else:
        # (a, b)의 현재 위치가 속한 사분면에 따라 인덱스 계산

        # (a % 2), (b % 2): 현재 좌표가 작은 2x2 블록 내에서
        # 어느 위치(왼쪽 위, 오른쪽 위, 왼쪽 아래, 오른쪽 아래)에 있는지를 나타냄

        # (2 * (a % 2) + (b % 2)) :
        # ┌──────────────┬──────────────┐
        # │ (0,0): 0번    │ (0,1): 1번   │
        # ├──────────────┼──────────────┤
        # │ (1,0): 2번    │ (1,1): 3번   │
        # └──────────────┴──────────────┘
        # 이렇게 2×2 구역 내에서 몇 번째 칸인지를 계산함.

        # (4 * solve(...)):
        # 상위 단계(큰 사각형)에서 한 단계 아래로 내려갈 때
        # 한 블록은 4배씩 커지므로 이전 결과에 4를 곱함

        return (2 * (a % 2) + (b % 2)) + (4 * solve(N - 1, (a // 2), (b // 2)))

# 최종적으로 (r, c) 좌표의 방문 순서를 출력
print(solve(N, r, c))
