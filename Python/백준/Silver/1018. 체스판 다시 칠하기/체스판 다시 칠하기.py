# 지민이는 자신의 저택에서 MN개의 단위 정사각형으로 나누어져 있는 M×N 크기의 보드를 찾았다. 어떤 정사각형은 검은색으로 칠해져 있고, 나머지는 흰색으로 칠해져 있다. 지민이는 이 보드를 잘라서 8×8 크기의 체스판으로 만들려고 한다.
# 체스판은 검은색과 흰색이 번갈아서 칠해져 있어야 한다. 구체적으로, 각 칸이 검은색과 흰색 중 하나로 색칠되어 있고, 변을 공유하는 두 개의 사각형은 다른 색으로 칠해져 있어야 한다. 따라서 이 정의를 따르면 체스판을 색칠하는 경우는 두 가지뿐이다. 하나는 맨 왼쪽 위 칸이 흰색인 경우, 하나는 검은색인 경우이다.
# 보드가 체스판처럼 칠해져 있다는 보장이 없어서, 지민이는 8×8 크기의 체스판으로 잘라낸 후에 몇 개의 정사각형을 다시 칠해야겠다고 생각했다. 당연히 8*8 크기는 아무데서나 골라도 된다. 지민이가 다시 칠해야 하는 정사각형의 최소 개수를 구하는 프로그램을 작성하시오.

# [입력] 
# 첫째 줄에 N과 M이 주어진다. N과 M은 8보다 크거나 같고, 50보다 작거나 같은 자연수이다.
# 둘째 줄부터 N개의 줄에는 보드의 각 행의 상태가 주어진다. B는 검은색이며, W는 흰색이다.

# [출력]
# 첫째 줄에 지민이가 다시 칠해야 하는 정사각형 개수의 최솟값을 출력한다.

import copy

n, m = map(int, input().split())
board = []

for _ in range(n) :
    row = list(input())
    board.append(row)

count = []   
count1, count2 = 0, 0

# (i, j)는 8×8 체스판의 왼쪽 위 좌표
for i in range(n-7):
    for j in range(m-7):

        count1, count2 = 0, 0
        # count1: (왼쪽 위가 'W')로 시작하는 경우 칠해야 하는 칸 개수
        # count2: (왼쪽 위가 'B')로 시작하는 경우 칠해야 하는 칸 개수

        # 8×8 부분체스판 탐색
        for x in range(i, i+8) :
            for y in range(j, j+8) :

                if (x + y) % 2 == 0 : # 좌표 합이 짝수 → 왼쪽 위와 같은 색이어야 함
                    if board[x][y] != 'W':
                        count1 += 1
                    if board[x][y] != 'B':
                        count2 += 1

                else: # 좌표 합이 홀수 → 왼쪽 위와 반대 색이어야 함
                    if board[x][y] != 'B':
                        count1 += 1
                    if board[x][y] != 'W':
                        count2 += 1

        # 두 경우 중 더 적게 칠하는 경우를 저장
        count.append(min(count1, count2))

# 모든 8×8 구간 중 최소 칠하기 횟수 출력
print(min(count))
